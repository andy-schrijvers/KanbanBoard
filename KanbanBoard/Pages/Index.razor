@page "/"



<NewTask OnSubmit="AddTask" @attributes="InputAttributes"/> 

<div class="row p-2">
    <Dropzone Priority="TaskPriority.high"
              TaskItemsDictionary="TaskItems"
              OnDrop="OnDrop"
              OnStartDrag="OnStartDrag" 
              OnDragEnter="OnDragEnter"
              OnDragEnd="OnDragEnd"/>

    <Dropzone Priority="TaskPriority.Medium"
              TaskItemsDictionary="TaskItems"
              OnDrop="OnDrop"
              OnStartDrag="OnStartDrag"
              OnDragEnter="OnDragEnter"
              OnDragEnd="OnDragEnd"/>

    <Dropzone Priority="TaskPriority.Low"
              TaskItemsDictionary="TaskItems"
              OnDrop="OnDrop"
              OnStartDrag="OnStartDrag"
              OnDragEnter="OnDragEnter"
              OnDragEnd="OnDragEnd"/>


</div>

@code{

    public TaskItem CurrentTaskItem { get; set; }
    public Dictionary<string, TaskItem> TaskItems { get; set; } = new Dictionary<string, TaskItem>();

    protected override void OnInitialized()
    {
        TaskItems.Add("1", new TaskItem()
        {
            TaskName = "Call Mom",
            Priority = TaskPriority.high
        });

        TaskItems.Add("2", new TaskItem()
        {
            TaskName = "Buy Milk",
            Priority = TaskPriority.Medium
        });

        TaskItems.Add("3", new TaskItem()
        {
            TaskName = "Exercise",
            Priority = TaskPriority.Low
        });


    }

    private void OnStartDrag(KeyValuePair<string, TaskItem> kvp)
    {
        CurrentTaskItem = kvp.Value;
    }

    private void OnDrop(TaskPriority priority)
    {
        CurrentTaskItem.Priority = priority;
    }

    public Dictionary<string, object> InputAttributes { get; set; } = new Dictionary<string, object>()
    {
        { "maxlength", "25" },
        { "placeholder", "enter new task" },
        { "title", "This textbox is used to enter your tasks." }
    };

    private static string counter = "3";

    private void AddTask(string taskName)
    {
        counter = $"{(int.Parse(counter += 1)).ToString()}";

        var taskItem = new TaskItem()
        {
            TaskName = taskName,
            Priority = TaskPriority.high
        };

        TaskItems.Add(counter, taskItem);
    }

    public TaskItem NewTaskItem { get; set; }

    public void OnDragEnter(KeyValuePair<string, TaskItem> kvp)
    {

        if (kvp.Value != null && kvp.Value != CurrentTaskItem)
        {
            NewTaskItem = kvp.Value;
        }
    }

    public void OnDragEnd()
    {
        if (NewTaskItem != null)
        {

            var kvp1 = TaskItems.FirstOrDefault(x => x.Value == NewTaskItem);
            var kvp2 = TaskItems.FirstOrDefault(x => x.Value == CurrentTaskItem);

            TaskItems.Remove(kvp1.Key);
            TaskItems.Remove(kvp2.Key);

            TaskItems.Add(kvp1.Key, kvp2.Value);
            TaskItems.Add(kvp2.Key, kvp1.Value);

        }

        NewTaskItem = null;
    }
}